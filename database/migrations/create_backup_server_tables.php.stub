<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateBackupServerTables extends Migration
{
    public function up()
    {
        Schema::create('destinations', function (Blueprint $table) {
            $table->bigIncrements('id');

            $table->string('name');
            $table->string('disk');

            $table->integer('keep_all_backups_for_days')->nullable();
            $table->integer('keep_daily_backups_for_days')->nullable();
            $table->integer('keep_weekly_backups_for_weeks')->nullable();
            $table->integer('keep_monthly_backups_for_months')->nullable();
            $table->integer('keep_yearly_backups_for_years')->nullable();
            $table->integer('delete_oldest_backups_when_using_more_megabytes_than')->nullable();

            $table->timestamps();
        });

        Schema::create('sources', function (Blueprint $table) {
            $table->bigIncrements('id');

            $table->string('name');
            $table->string('host');
            $table->string('ssh_user');
            $table->integer('ssh_port')->default(22);

            $table->json('pre_backup_commands')->nullable();
            $table->json('post_backup_commands')->nullable();

            $table->json('includes')->nullable();
            $table->json('excludes')->nullable();

            $table->unsignedBigInteger('destination_id')->nullable();

            $table->string('cleanup_strategy_class')->nullable();

            $table->integer('keep_all_backups_for_days')->nullable();
            $table->integer('keep_daily_backups_for_days')->nullable();
            $table->integer('keep_weekly_backups_for_weeks')->nullable();
            $table->integer('keep_monthly_backups_for_months')->nullable();
            $table->integer('keep_yearly_backups_for_years')->nullable();
            $table->integer('delete_oldest_backups_when_using_more_megabytes_than')->nullable();

            $table->timestamps();

            $table
                ->foreign('destination_id')
                ->references('id')
                ->on('destinations')
                ->onDelete('set null');
        });

        Schema::create('backups', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->string('status');
            $table->unsignedBigInteger('source_id');
            $table->unsignedBigInteger('destination_id');
            $table->string('disk');
            $table->string('path')->nullable();
            $table->string('transfer_speed')->nullable();
            $table->unsignedBigInteger('size_in_kb')->nullable();
            $table->unsignedBigInteger('real_size_in_kb')->nullable();

            $table->timestamps();

            $table->foreign('source_id')->references('id')->on('sources')->onDelete('cascade');
            $table->foreign('destination_id')->references('id')->on('destinations')->onDelete('cascade');
        });

        Schema::create('backup_log', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('source_id')->nullable();
            $table->unsignedBigInteger('backup_id')->nullable();
            $table->unsignedBigInteger('destination_id')->nullable();
            $table->string('task');
            $table->string('level');
            $table->longText('message');
            $table->timestamps();
        });

        Schema::create('notification_destinations', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->integer('team_id')->unsigned();
            $table->string('channel');
            $table->json('accepts_notification_classes');
            $table->timestamps();
        });
    }
}
